AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  CloudFrontOAI:
    Type: String
  CloudFrontOAICanonical:
    Type: String
  DomainName: 
    Type: String
    Description: Name of the domain used for the quiz.
  UserPoolId: 
    Type: String
  UserPoolProviderName:
    Type: String
  CertificateArn:
    Type: String
  LoginDomainAliasTarget:
    Type: String
Resources:
  QuizZone: 
    Type: AWS::Route53::HostedZone
    Properties: 
      HostedZoneConfig: 
        Comment: Quiz domain
      Name: !Sub "${DomainName}."
      HostedZoneTags: 
        - 
          Key: Component
          Value: quiz
        - 
          Key: Role
          Value: iotcc
  WebsiteRootRecordSet:
    Type: AWS::Route53::RecordSet
    Properties: 
      AliasTarget: 
        DNSName: !GetAtt WebsiteDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2
      HostedZoneId: !Ref QuizZone
      Name: !Sub "${DomainName}."
      Type: A
  WebsiteWwwRecordSet:
    Type: AWS::Route53::RecordSet
    Properties: 
      AliasTarget: 
        DNSName: !GetAtt WebsiteDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2
      HostedZoneId: !Ref QuizZone
      Name: !Sub "www.${DomainName}."
      Type: A
  LoginRecordSet:
    Type: AWS::Route53::RecordSet
    Properties: 
      AliasTarget: 
        DNSName: !Ref LoginDomainAliasTarget
        HostedZoneId: Z2FDTNDATAQYW2
      HostedZoneId: !Ref QuizZone
      Name: !Sub "auth.${DomainName}."
      Type: A
  WebsiteBucket:
    Type: AWS::S3::Bucket
  WebsiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref WebsiteBucket
      PolicyDocument:
        Statement: 
          - 
            Action: 
              - "s3:GetObject"
            Effect: Allow
            Resource: !Sub "arn:aws:s3:::${WebsiteBucket}/*"
            Principal: "*"
          - 
            Action: 
              - "s3:GetObject"
              - "s3:ListBucket"
            Effect: Allow
            Resource: 
              - !Sub "arn:aws:s3:::${WebsiteBucket}"
              - !Sub "arn:aws:s3:::${WebsiteBucket}/*"
            Principal: 
              CanonicalUser: !Ref CloudFrontOAICanonical
  WebsiteDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !Ref DomainName
          - !Sub "www.${DomainName}"
        Comment: Quiz distribution
        CustomErrorResponses:
          - 
            ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: '/'
        DefaultCacheBehavior:
          DefaultTTL: 5
          ForwardedValues:
            QueryString: true
          TargetOriginId: quiz
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: index.html
        Enabled: Yes
        Origins:
          - 
            Id: quiz
            DomainName: !Sub ${WebsiteBucket}.s3.amazonaws.com
            S3OriginConfig:
              OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${CloudFrontOAI}"
        ViewerCertificate:
          AcmCertificateArn: !Ref CertificateArn
          SslSupportMethod: sni-only
      Tags:
        -
          Key: Component
          Value: quiz
        - 
          Key: Role
          Value: iotcc
  IdentityPool:
    Type: AWS::Cognito::IdentityPool
    Properties:
      AllowUnauthenticatedIdentities: Yes
      IdentityPoolName: QuizIdentities
      CognitoIdentityProviders:
        -
          ClientId: !Ref UserPoolDashboardClient
          ProviderName: !Ref UserPoolProviderName
  IdentityPoolRoleAttachment:
    Type: AWS::Cognito::IdentityPoolRoleAttachment
    Properties:
      IdentityPoolId: !Ref IdentityPool
      Roles:  
        authenticated: !GetAtt IdentityPoolAuthenticatedRole.Arn
        unauthenticated: !GetAtt IdentityPoolUnauthenticatedRole.Arn
  IdentityPoolAuthenticatedRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - 
            Effect: Allow
            Principal:
              Federated: "cognito-identity.amazonaws.com"
            Action:
              - "sts:AssumeRoleWithWebIdentity"
      Policies:
        - 
          PolicyName: "ManageMyStuff"
          PolicyDocument:
            Version: "2012-10-17"
            Statement: 
              -
                Sid: "MyDynamoItems"
                Effect: Allow
                Action: 
                  - "dynamodb:GetItem"
                  - "dynamodb:UpdateItem"
                  - "dynamodb:Query"
                Resource: '*'
  IdentityPoolUnauthenticatedRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Federated: "cognito-identity.amazonaws.com"
            Action: 
              - "sts:AssumeRoleWithWebIdentity"
      Policies:
        - 
          PolicyName: "PinpointEvents"
          PolicyDocument: 
            Version: "2012-10-17"
            Statement: 
              - 
                Sid: "PutEvents"
                Action:
                  - "mobileanalytics:PutEvents"
                Effect: "Allow"
                Resource: "*"
  UserPoolDashboardClient:
    Type: "AWS::Cognito::UserPoolClient"
    Properties:
      ClientName: quiz
      GenerateSecret: false
      UserPoolId: !Ref UserPoolId
Outputs:
  UserPoolDashboardClient:
    Value: !Ref UserPoolDashboardClient
    Description: User Pool Client Id
  WebsiteBucket:
    Value: !Ref WebsiteBucket
    Description: Name of the bucket
  HostedZoneId:
    Description: Quiz hosted zone id
    Value: !Ref QuizZone
  IdentityPoolId:
    Description: ID of the Identity Pool
    Value: !Ref IdentityPool